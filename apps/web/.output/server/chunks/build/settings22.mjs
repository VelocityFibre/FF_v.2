import { ssr, ssrHydrationKey, escape, createComponent, mergeProps } from 'solid-js/web';
import { t } from './card-BBkvPB4n2.mjs';
import { c } from './button-BIPZjNFL2.mjs';
import { k as s, s as s$2, j as A$1 } from '../nitro/nitro.mjs';
import { k as k$1, s as s$1, p } from './shield-DLTUrCcj.mjs';
import 'node:http';
import 'node:https';
import 'node:events';
import 'node:buffer';
import 'node:fs';
import 'node:path';
import 'node:crypto';
import 'node:async_hooks';
import 'vinxi/lib/invariant';
import 'vinxi/lib/path';
import 'node:url';
import 'seroval';
import 'seroval-plugins/web';
import 'solid-js';
import 'solid-js/web/storage';

var u = [["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }], ["path", { d: "M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20", key: "13o1zl" }], ["path", { d: "M2 12h20", key: "9i4pu4" }]], b = (r) => createComponent(A$1, mergeProps(r, { name: "Globe", iconNode: u })), g = b, v = ["<div", ' class="flex items-center gap-3 mb-4"><!--$-->', '<!--/--><h3 class="ff-heading-medium">Theme & Appearance</h3></div>'], h = ["<p", ' class="text-muted-foreground mb-6">Customize the visual appearance of the system</p>'], x = ["<div", ' class="space-y-4"><div><label class="ff-label mb-2 block">Default Theme</label><select class="w-full px-3 py-2 border border-border rounded-md bg-background text-foreground"><option value="light">Light Theme</option><option value="dark">Dark Theme</option><option value="vf">VelocityFibre Theme</option><option value="fibreflow">FibreFlow Theme</option></select></div><!--$-->', "<!--/--></div>"], y = ["<div", ' class="flex items-center gap-3 mb-4"><!--$-->', '<!--/--><h3 class="ff-heading-medium">System Configuration</h3></div>'], $ = ["<p", ' class="text-muted-foreground mb-6">General system settings and preferences</p>'], k = ["<div", ' class="space-y-4"><div><label class="ff-label mb-2 block">Default Project Phase</label><select class="w-full px-3 py-2 border border-border rounded-md bg-background text-foreground"><option value="planning">Planning</option><option value="design">Design</option><option value="implementation">Implementation</option></select></div><div><label class="ff-label mb-2 block">Auto-assign tasks</label><input type="checkbox" class="mr-2" checked><span class="text-sm text-muted-foreground">Automatically assign tasks based on role</span></div><!--$-->', "<!--/--></div>"], w = ["<div", ' class="flex items-center gap-3 mb-4"><!--$-->', '<!--/--><h3 class="ff-heading-medium">Database & Storage</h3></div>'], _ = ["<p", ' class="text-muted-foreground mb-6">Database configuration and backup settings</p>'], S = ["<div", ' class="space-y-4"><div class="flex items-center justify-between"><span class="text-sm">Database Status</span><span class="text-sm bg-green-100 text-green-800 px-2 py-1 rounded">Mock Data Active</span></div><div class="flex items-center justify-between"><span class="text-sm">Last Backup</span><span class="text-sm text-muted-foreground">N/A (Demo Mode)</span></div><!--$-->', "<!--/--></div>"], D = ["<div", ' class="flex items-center gap-3 mb-4"><!--$-->', '<!--/--><h3 class="ff-heading-medium">Security & Permissions</h3></div>'], A = ["<p", ' class="text-muted-foreground mb-6">Security settings and user permissions</p>'], P = ["<div", ' class="space-y-4"><div><label class="ff-label mb-2 block">Session Timeout (minutes)</label><input type="number" value="60" class="w-full px-3 py-2 border border-border rounded-md bg-background text-foreground"></div><div><label class="ff-label mb-2 block">Require 2FA</label><input type="checkbox" class="mr-2"><span class="text-sm text-muted-foreground">Require two-factor authentication for all users</span></div><!--$-->', "<!--/--></div>"], C = ["<div", ' class="flex items-center gap-3 mb-4"><!--$-->', '<!--/--><h3 class="ff-heading-medium">Notifications</h3></div>'], T = ["<p", ' class="text-muted-foreground mb-6">Configure system notifications and alerts</p>'], I = ["<div", ' class="space-y-4"><div><label class="ff-label mb-2 block">Email Notifications</label><input type="checkbox" class="mr-2" checked><span class="text-sm text-muted-foreground">Send email notifications for task updates</span></div><div><label class="ff-label mb-2 block">Project Milestones</label><input type="checkbox" class="mr-2" checked><span class="text-sm text-muted-foreground">Notify when milestones are reached</span></div><!--$-->', "<!--/--></div>"], z = ["<div", ' class="flex items-center gap-3 mb-4"><!--$-->', '<!--/--><h3 class="ff-heading-medium">Integrations</h3></div>'], N = ["<p", ' class="text-muted-foreground mb-6">Third-party integrations and API settings</p>'], M = ["<div", ' class="space-y-4"><div class="flex items-center justify-between"><span class="text-sm">API Status</span><span class="text-sm bg-yellow-100 text-yellow-800 px-2 py-1 rounded">Demo Mode</span></div><div class="flex items-center justify-between"><span class="text-sm">Webhook URL</span><span class="text-sm text-muted-foreground">Not configured</span></div><!--$-->', "<!--/--></div>"], j = ["<div", ' class="flex items-start gap-3"><!--$-->', '<!--/--><div><h3 class="font-semibold text-yellow-900 mb-2">Demo Mode Notice</h3><p class="text-yellow-800 mb-4">This is a demonstration environment. All settings changes are temporary and will be reset when the page is refreshed. In a production environment, these settings would be saved to a database and persist between sessions.</p><div class="space-y-2 text-sm text-yellow-700"><p><strong>Available in Production:</strong></p><ul class="list-disc list-inside space-y-1 ml-4"><li>Persistent settings storage</li><li>Real authentication and security</li><li>Database backup and recovery</li><li>API integrations and webhooks</li><li>Email notification system</li></ul></div></div></div>'], B = ["<div", ' class="ff-page-container"><div class="ff-page-header"><h1 class="ff-page-title">System Settings</h1><p class="ff-page-subtitle">Configure system preferences and settings</p></div><section class="ff-section"><div class="grid grid-cols-1 lg:grid-cols-2 gap-8"><!--$-->', "<!--/--><!--$-->", "<!--/--><!--$-->", "<!--/--><!--$-->", "<!--/--><!--$-->", "<!--/--><!--$-->", '<!--/--></div></section><section class="ff-section">', "</section></div>"];
const V = () => ssr(B, ssrHydrationKey(), escape(createComponent(t, { class: "p-6 ff-card", get children() {
  return [ssr(v, ssrHydrationKey(), escape(createComponent(k$1, { class: "w-6 h-6 text-primary" }))), ssr(h, ssrHydrationKey()), ssr(x, ssrHydrationKey(), escape(createComponent(c, { variant: "outline", size: "sm", children: "Save Theme Settings" })))];
} })), escape(createComponent(t, { class: "p-6 ff-card", get children() {
  return [ssr(y, ssrHydrationKey(), escape(createComponent(s, { class: "w-6 h-6 text-primary" }))), ssr($, ssrHydrationKey()), ssr(k, ssrHydrationKey(), escape(createComponent(c, { variant: "outline", size: "sm", children: "Save Configuration" })))];
} })), escape(createComponent(t, { class: "p-6 ff-card", get children() {
  return [ssr(w, ssrHydrationKey(), escape(createComponent(s$1, { class: "w-6 h-6 text-primary" }))), ssr(_, ssrHydrationKey()), ssr(S, ssrHydrationKey(), escape(createComponent(c, { variant: "outline", size: "sm", disabled: true, children: "Create Backup (Demo)" })))];
} })), escape(createComponent(t, { class: "p-6 ff-card", get children() {
  return [ssr(D, ssrHydrationKey(), escape(createComponent(p, { class: "w-6 h-6 text-primary" }))), ssr(A, ssrHydrationKey()), ssr(P, ssrHydrationKey(), escape(createComponent(c, { variant: "outline", size: "sm", children: "Save Security Settings" })))];
} })), escape(createComponent(t, { class: "p-6 ff-card", get children() {
  return [ssr(C, ssrHydrationKey(), escape(createComponent(s$2, { class: "w-6 h-6 text-primary" }))), ssr(T, ssrHydrationKey()), ssr(I, ssrHydrationKey(), escape(createComponent(c, { variant: "outline", size: "sm", children: "Save Notification Settings" })))];
} })), escape(createComponent(t, { class: "p-6 ff-card", get children() {
  return [ssr(z, ssrHydrationKey(), escape(createComponent(g, { class: "w-6 h-6 text-primary" }))), ssr(N, ssrHydrationKey()), ssr(M, ssrHydrationKey(), escape(createComponent(c, { variant: "outline", size: "sm", disabled: true, children: "Configure API (Demo)" })))];
} })), escape(createComponent(t, { class: "p-6 ff-card border-yellow-200 bg-yellow-50", get children() {
  return ssr(j, ssrHydrationKey(), escape(createComponent(s, { class: "w-6 h-6 text-yellow-600 mt-1" })));
} })));

export { V as default };
//# sourceMappingURL=settings22.mjs.map
